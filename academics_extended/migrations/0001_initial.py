# Generated by Django 5.2.1 on 2025-10-19 18:28

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academics', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Año Académico')),
                ('start_date', models.DateField(verbose_name='Fecha de Inicio')),
                ('end_date', models.DateField(verbose_name='Fecha de Fin')),
                ('is_current', models.BooleanField(default=False, verbose_name='Año Actual')),
            ],
            options={
                'verbose_name': 'Año Académico',
                'verbose_name_plural': 'Años Académicos',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nombre del Salón')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Código')),
                ('capacity', models.PositiveIntegerField(verbose_name='Capacidad')),
                ('building', models.CharField(blank=True, max_length=50, verbose_name='Edificio')),
                ('floor', models.CharField(blank=True, max_length=20, verbose_name='Piso')),
                ('equipment', models.TextField(blank=True, verbose_name='Equipamiento')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Salón',
                'verbose_name_plural': 'Salones',
                'ordering': ['building', 'floor', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Nombre del Grado')),
                ('level', models.CharField(choices=[('primaria', 'Primaria'), ('bachillerato', 'Bachillerato')], max_length=20, verbose_name='Nivel')),
                ('order', models.PositiveIntegerField(help_text='Para ordenar los grados', verbose_name='Orden')),
            ],
            options={
                'verbose_name': 'Grado',
                'verbose_name_plural': 'Grados',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='GradingScale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_value', models.DecimalField(decimal_places=2, max_digits=3, verbose_name='Valor Mínimo')),
                ('max_value', models.DecimalField(decimal_places=2, max_digits=3, verbose_name='Valor Máximo')),
                ('letter_grade', models.CharField(max_length=2, verbose_name='Nota Literal')),
                ('description', models.CharField(max_length=50, verbose_name='Descripción')),
                ('color_code', models.CharField(default='#000000', max_length=7, verbose_name='Código de Color')),
            ],
            options={
                'verbose_name': 'Escala de Calificación',
                'verbose_name_plural': 'Escalas de Calificación',
                'ordering': ['-min_value'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre de la Materia')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Código')),
                ('area', models.CharField(choices=[('matematicas', 'Matemáticas'), ('ciencias', 'Ciencias Naturales'), ('sociales', 'Ciencias Sociales'), ('lenguaje', 'Lenguaje y Literatura'), ('ingles', 'Inglés'), ('educacion_fisica', 'Educación Física'), ('artes', 'Artes'), ('informatica', 'Informática'), ('religion', 'Religión'), ('etica', 'Ética y Valores')], max_length=50, verbose_name='Área')),
                ('hours_per_week', models.PositiveIntegerField(verbose_name='Horas por Semana')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
            ],
            options={
                'verbose_name': 'Materia',
                'verbose_name_plural': 'Materias',
                'ordering': ['area', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nombre de la Franja')),
                ('start_time', models.TimeField(verbose_name='Hora de Inicio')),
                ('end_time', models.TimeField(verbose_name='Hora de Fin')),
                ('is_break', models.BooleanField(default=False, verbose_name='Es Recreo')),
                ('order', models.PositiveIntegerField(verbose_name='Orden')),
            ],
            options={
                'verbose_name': 'Franja Horaria',
                'verbose_name_plural': 'Franjas Horarias',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(choices=[('A', 'Sección A'), ('B', 'Sección B'), ('C', 'Sección C'), ('D', 'Sección D')], max_length=5, verbose_name='Sección')),
                ('max_students', models.PositiveIntegerField(default=35, verbose_name='Máximo de Estudiantes')),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics_extended.academicyear', verbose_name='Año Académico')),
                ('homeroom_teacher', models.ForeignKey(blank=True, limit_choices_to={'profile__role': 'teacher'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Profesor Director de Grupo')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics_extended.grade', verbose_name='Grado')),
            ],
            options={
                'verbose_name': 'Curso',
                'verbose_name_plural': 'Cursos',
                'ordering': ['academic_year', 'grade__order', 'section'],
                'unique_together': {('grade', 'section', 'academic_year')},
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=20, unique=True, verbose_name='ID de Estudiante')),
                ('enrollment_date', models.DateField(verbose_name='Fecha de Matrícula')),
                ('status', models.CharField(choices=[('active', 'Activo'), ('inactive', 'Inactivo'), ('transferred', 'Trasladado'), ('graduated', 'Graduado')], default='active', max_length=20, verbose_name='Estado')),
                ('guardian_name', models.CharField(max_length=200, verbose_name='Nombre del Acudiente')),
                ('guardian_phone', models.CharField(max_length=20, verbose_name='Teléfono del Acudiente')),
                ('guardian_email', models.EmailField(blank=True, max_length=254, verbose_name='Email del Acudiente')),
                ('guardian_relationship', models.CharField(default='Padre/Madre', max_length=50, verbose_name='Parentesco')),
                ('address', models.TextField(verbose_name='Dirección')),
                ('birth_date', models.DateField(verbose_name='Fecha de Nacimiento')),
                ('birth_place', models.CharField(blank=True, max_length=100, verbose_name='Lugar de Nacimiento')),
                ('medical_info', models.TextField(blank=True, verbose_name='Información Médica')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='academics_extended.course', verbose_name='Curso')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Estudiante',
                'verbose_name_plural': 'Estudiantes',
                'ordering': ['user__last_name', 'user__first_name'],
            },
        ),
        migrations.CreateModel(
            name='GradeRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_name', models.CharField(max_length=200, verbose_name='Nombre de la Actividad')),
                ('grade_value', models.DecimalField(decimal_places=2, max_digits=4, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('5.00'))], verbose_name='Calificación')),
                ('max_value', models.DecimalField(decimal_places=2, default=Decimal('5.00'), max_digits=4, verbose_name='Valor Máximo')),
                ('weight', models.DecimalField(decimal_places=2, default=Decimal('1.00'), help_text='Porcentaje de la nota (0.01 = 1%, 1.00 = 100%)', max_digits=3, validators=[django.core.validators.MinValueValidator(Decimal('0.01')), django.core.validators.MaxValueValidator(Decimal('1.00'))], verbose_name='Peso (%)')),
                ('date_recorded', models.DateField(verbose_name='Fecha de Registro')),
                ('period', models.CharField(choices=[('period_1', 'Período 1'), ('period_2', 'Período 2'), ('period_3', 'Período 3'), ('period_4', 'Período 4'), ('final', 'Final')], max_length=20, verbose_name='Período')),
                ('activity_type', models.CharField(choices=[('quiz', 'Quiz'), ('exam', 'Examen'), ('homework', 'Tarea'), ('project', 'Proyecto'), ('participation', 'Participación'), ('lab', 'Laboratorio'), ('presentation', 'Presentación')], max_length=50, verbose_name='Tipo de Actividad')),
                ('observations', models.TextField(blank=True, verbose_name='Observaciones')),
                ('teacher', models.ForeignKey(limit_choices_to={'profile__role': 'teacher'}, on_delete=django.db.models.deletion.CASCADE, related_name='grade_records_extended', to=settings.AUTH_USER_MODEL, verbose_name='Profesor')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics_extended.student', verbose_name='Estudiante')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics_extended.subject', verbose_name='Materia')),
            ],
            options={
                'verbose_name': 'Registro de Calificación',
                'verbose_name_plural': 'Registros de Calificaciones',
                'ordering': ['-date_recorded', 'student', 'subject'],
            },
        ),
        migrations.CreateModel(
            name='StudentGradeSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.CharField(choices=[('period_1', 'Período 1'), ('period_2', 'Período 2'), ('period_3', 'Período 3'), ('period_4', 'Período 4'), ('final', 'Final')], max_length=20, verbose_name='Período')),
                ('quiz_average', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Promedio Quizes')),
                ('exam_average', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Promedio Exámenes')),
                ('homework_average', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Promedio Tareas')),
                ('project_average', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Promedio Proyectos')),
                ('participation_average', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Promedio Participación')),
                ('final_average', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Promedio Final')),
                ('letter_grade', models.CharField(blank=True, max_length=2, verbose_name='Nota Literal')),
                ('total_activities', models.PositiveIntegerField(default=0, verbose_name='Total Actividades')),
                ('activities_completed', models.PositiveIntegerField(default=0, verbose_name='Actividades Completadas')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics_extended.academicyear', verbose_name='Año Académico')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics_extended.student', verbose_name='Estudiante')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics_extended.subject', verbose_name='Materia')),
            ],
            options={
                'verbose_name': 'Resumen de Calificaciones',
                'verbose_name_plural': 'Resúmenes de Calificaciones',
                'ordering': ['student__user__last_name', 'subject__name'],
                'unique_together': {('student', 'subject', 'period', 'academic_year')},
            },
        ),
        migrations.CreateModel(
            name='EvaluationCriteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.CharField(choices=[('period_1', 'Período 1'), ('period_2', 'Período 2'), ('period_3', 'Período 3'), ('period_4', 'Período 4'), ('final', 'Final')], max_length=20, verbose_name='Período')),
                ('quiz_weight', models.DecimalField(decimal_places=2, default=0.2, max_digits=3, verbose_name='Peso Quizes')),
                ('exam_weight', models.DecimalField(decimal_places=2, default=0.3, max_digits=3, verbose_name='Peso Exámenes')),
                ('homework_weight', models.DecimalField(decimal_places=2, default=0.25, max_digits=3, verbose_name='Peso Tareas')),
                ('project_weight', models.DecimalField(decimal_places=2, default=0.15, max_digits=3, verbose_name='Peso Proyectos')),
                ('participation_weight', models.DecimalField(decimal_places=2, default=0.1, max_digits=3, verbose_name='Peso Participación')),
                ('min_passing_grade', models.DecimalField(decimal_places=2, default=3.0, max_digits=3, verbose_name='Nota Mínima')),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics_extended.academicyear', verbose_name='Año Académico')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics_extended.subject', verbose_name='Materia')),
            ],
            options={
                'verbose_name': 'Criterio de Evaluación',
                'verbose_name_plural': 'Criterios de Evaluación',
                'unique_together': {('subject', 'period', 'academic_year')},
            },
        ),
        migrations.CreateModel(
            name='AttendanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Fecha')),
                ('status', models.CharField(choices=[('present', 'Presente'), ('absent', 'Ausente'), ('late', 'Tardanza'), ('excused', 'Justificado')], default='present', max_length=20, verbose_name='Estado')),
                ('notes', models.TextField(blank=True, verbose_name='Observaciones')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics.student', verbose_name='Estudiante')),
                ('teacher', models.ForeignKey(limit_choices_to={'profile__role': 'teacher'}, on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to=settings.AUTH_USER_MODEL, verbose_name='Profesor')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics_extended.subject', verbose_name='Materia')),
            ],
            options={
                'verbose_name': 'Registro de Asistencia',
                'verbose_name_plural': 'Registros de Asistencia',
                'ordering': ['-date', 'student'],
                'unique_together': {('student', 'subject', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Fecha')),
                ('status', models.CharField(choices=[('present', 'Presente'), ('absent', 'Ausente'), ('late', 'Tardanza'), ('justified', 'Falta Justificada'), ('medical', 'Incapacidad Médica')], max_length=20, verbose_name='Estado')),
                ('notes', models.TextField(blank=True, verbose_name='Observaciones')),
                ('justification', models.TextField(blank=True, verbose_name='Justificación')),
                ('teacher', models.ForeignKey(limit_choices_to={'profile__role': 'teacher'}, on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records_extended', to=settings.AUTH_USER_MODEL, verbose_name='Profesor')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics_extended.student', verbose_name='Estudiante')),
                ('subject', models.ForeignKey(blank=True, help_text='Dejar en blanco para asistencia general del día', null=True, on_delete=django.db.models.deletion.CASCADE, to='academics_extended.subject', verbose_name='Materia')),
            ],
            options={
                'verbose_name': 'Asistencia',
                'verbose_name_plural': 'Registros de Asistencia',
                'ordering': ['-date', 'student'],
                'unique_together': {('student', 'date', 'subject')},
            },
        ),
        migrations.CreateModel(
            name='SubjectAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics_extended.academicyear', verbose_name='Año Académico')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics_extended.course', verbose_name='Curso')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics_extended.subject', verbose_name='Materia')),
                ('teacher', models.ForeignKey(limit_choices_to={'profile__role': 'teacher'}, on_delete=django.db.models.deletion.CASCADE, related_name='subject_assignments_extended', to=settings.AUTH_USER_MODEL, verbose_name='Profesor')),
            ],
            options={
                'verbose_name': 'Asignación de Materia',
                'verbose_name_plural': 'Asignaciones de Materias',
                'ordering': ['academic_year', 'course', 'subject'],
                'unique_together': {('teacher', 'subject', 'course', 'academic_year')},
            },
        ),
        migrations.CreateModel(
            name='TeacherSubjectAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_main_teacher', models.BooleanField(default=False, verbose_name='Profesor Principal')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics_extended.academicyear', verbose_name='Año Académico')),
                ('assigned_by', models.ForeignKey(limit_choices_to={'profile__role__in': ['admin', 'secretary']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teacher_assignments_made', to=settings.AUTH_USER_MODEL, verbose_name='Asignado por')),
                ('courses', models.ManyToManyField(to='academics_extended.course', verbose_name='Cursos Asignados')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics_extended.subject', verbose_name='Materia')),
                ('teacher', models.ForeignKey(limit_choices_to={'profile__role': 'teacher'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Profesor')),
            ],
            options={
                'verbose_name': 'Asignación de Profesor',
                'verbose_name_plural': 'Asignaciones de Profesores',
                'unique_together': {('teacher', 'subject', 'academic_year')},
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('monday', 'Lunes'), ('tuesday', 'Martes'), ('wednesday', 'Miércoles'), ('thursday', 'Jueves'), ('friday', 'Viernes')], max_length=10, verbose_name='Día de la Semana')),
                ('classroom', models.CharField(blank=True, max_length=50, verbose_name='Aula')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics_extended.course', verbose_name='Curso')),
                ('created_by', models.ForeignKey(limit_choices_to={'profile__role__in': ['admin', 'secretary']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schedules_created', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('teacher', models.ForeignKey(limit_choices_to={'profile__role': 'teacher'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Profesor')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics_extended.subject', verbose_name='Materia')),
                ('time_slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics_extended.timeslot', verbose_name='Franja Horaria')),
            ],
            options={
                'verbose_name': 'Horario',
                'verbose_name_plural': 'Horarios',
                'ordering': ['course', 'day_of_week', 'time_slot__order'],
                'unique_together': {('course', 'day_of_week', 'time_slot'), ('teacher', 'day_of_week', 'time_slot')},
            },
        ),
    ]
